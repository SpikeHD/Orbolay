name: build

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/build.yml'
      - 'Cargo.toml'
      - 'src/**/*'
  pull_request:
    paths:
      - '.github/workflows/build.yml'
      - 'Cargo.toml'
      - 'src/**/*'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.config.platform }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - platform: ubuntu-22.04
            target: 'x86_64-unknown-linux-gnu'

          - platform: macos-13
            target: 'x86_64-apple-darwin'
          - platform: macos-13
            target: 'aarch64-apple-darwin'

          - platform: windows-latest
            target: 'x86_64-pc-windows-msvc'
          - platform: windows-latest
            target: 'aarch64-pc-windows-msvc'
    steps:
      - uses: actions-rust-lang/setup-rust-toolchain@v1.8
        with:
          toolchain: stable
          cache: false
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.config.target }}-cargo-${{ hashFiles('Cargo.lock') }}

      - uses: actions/checkout@v4

      - name: Install Dependencies
        if: matrix.config.platform == 'ubuntu-22.04'
        run: sudo apt-get install -y build-essential libssl-dev pkg-config cmake libgtk-3-dev libclang-dev libglib2.0-dev

      - name: Add targets
        run: rustup target add ${{ matrix.config.target }}

      - name: Define GIT_HASH
        id: sha
        run: echo "GIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Build
        run: cargo build --release --target ${{ matrix.config.target }}
        env:
          GIT_HASH: ${{ steps.sha.outputs.GIT_HASH }}
          RUSTFLAGS: -Awarnings

      - name: Upload
        if: matrix.config.platform != 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: orbolay-${{ matrix.config.target }}
          path: target/${{ matrix.config.target }}/release/orbolay

      - name: Upload (Windows)
        if: matrix.config.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: orbolay-${{ matrix.config.target }}
          path: target/${{ matrix.config.target }}/release/orbolay.exe
